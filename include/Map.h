#pragma once

#include <SFML/System/Vector2.hpp>

constexpr  size_t WINDOW_WIDTH = 630;
constexpr size_t WINDOW_HEIGHT = 840;

constexpr  size_t MAP_WIDTH = 690;
constexpr size_t MAP_HEIGHT = 810;
constexpr float BLOCK_WIDTH = 30.f;

enum MapType
{
	Move = 0,
	PowerUpPosition = 1,
	Teleport = 2,
	SlowDown = 3,
	GhostHouse = 4,
	Wall = 5
};

static sf::Vector2f getMapOffset()
{
	return sf::Vector2f{ -BLOCK_WIDTH, BLOCK_WIDTH };
}

constexpr size_t getMapMaxRowIndex()
{
	return static_cast<size_t>(MAP_HEIGHT / BLOCK_WIDTH) - 1;
}

constexpr size_t getMapMaxColumnIndex()
{
	return static_cast<size_t>(MAP_WIDTH / BLOCK_WIDTH) - 1;
}

constexpr int map[getMapMaxRowIndex() + 1][getMapMaxColumnIndex() + 1] ={
								{5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5},
								{5,5,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,5,5},
								{5,5,0,5,5,5,0,5,5,5,0,5,0,5,5,5,0,5,5,5,0,5,5},
								{5,5,1,5,5,5,0,5,5,5,0,5,0,5,5,5,0,5,5,5,1,5,5},
								{5,5,0,5,5,5,0,5,5,5,0,5,0,5,5,5,0,5,5,5,0,5,5},
								{5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
								{5,5,0,5,5,5,0,5,0,5,5,5,5,5,0,5,0,5,5,5,0,5,5},
								{5,5,0,5,5,5,0,5,0,5,5,5,5,5,0,5,0,5,5,5,0,5,5},
								{5,5,0,0,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,0,0,5,5},
								{5,5,5,5,5,5,0,5,5,5,0,5,0,5,5,5,0,5,5,5,5,5,5},
								{5,5,5,5,5,5,0,5,0,0,0,0,0,0,0,5,0,5,5,5,5,5,5},
								{5,5,5,5,5,5,0,5,0,5,5,3,5,5,0,5,0,5,5,5,5,5,5},
								{5,5,5,5,5,5,0,5,0,5,4,4,4,5,0,5,0,5,5,5,5,5,5},
								{2,3,3,3,3,3,0,0,0,5,4,4,4,5,0,0,0,3,3,3,3,3,2},
								{5,5,5,5,5,5,0,5,0,5,5,5,5,5,0,5,0,5,5,5,5,5,5},
								{5,5,5,5,5,5,0,5,0,0,0,0,0,0,0,5,0,5,5,5,5,5,5},
								{5,5,5,5,5,5,0,5,0,5,5,5,5,5,0,5,0,5,5,5,5,5,5},
								{5,5,5,5,5,5,0,5,0,5,5,5,5,5,0,5,0,5,5,5,5,5,5},
								{5,5,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,5,5},
								{5,5,0,5,5,5,0,5,5,5,0,5,0,5,5,5,0,5,5,5,0,5,5},
								{5,5,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,5,5},
								{5,5,5,5,0,5,0,5,0,5,5,5,5,5,0,5,0,5,0,5,5,5,5},
								{5,5,5,5,0,5,0,5,0,5,5,5,5,5,0,5,0,5,0,5,5,5,5},
								{5,5,0,0,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,0,0,5,5},
								{5,5,0,5,5,5,5,5,5,5,0,5,0,5,5,5,5,5,5,5,0,5,5},
								{5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
								{5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5}};
				